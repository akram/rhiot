#  Licensed to the Rhiot under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#!/usr/bin/env bash

### General configuration

if [ -z "${RHIOT_VERSION}" ]; then
  RHIOT_VERSION=0.1.3
fi

if [ -z "${RHIOT_HOME}" ]; then
  RHIOT_HOME="${HOME}/.rhiot"
fi

if [ -z "${RHIOT_DOCKER_MACHINE_ENV}" ]; then
  RHIOT_DOCKER_MACHINE_ENV="default"
fi

RHIOT_RCP_LOG=$RHIOT_HOME/rcp.log
REQUIRED_DOCKER_VERSION=1.8.2


if [ ! -d ${RHIOT_HOME} ]; then
	mkdir -p ${RHIOT_HOME}
	echo "INFO : use RHIOT_HOME=${RHIOT_HOME}" 
	echo "INFO : create RHIOT_HOME=${RHIOT_HOME}" 
fi

echo "INFO : Starting Rhiot Cloud Platform" 

### Docker boot init

case "$OSTYPE" in 

	linux-gnu)
      if ! type "docker" ; then
        echo "INFO : Docker not found - installing..."
        wget -qO- https://get.docker.com/ | sh
      else
        DOCKER_VERSION=`docker version --format '{{.Server.Version}}'`
        if [ "$DOCKER_VERSION" \< "$REQUIRED_DOCKER_VERSION" ]; then
          echo "INFO : Docker ${REQUIRED_DOCKER_VERSION} is required to run Rhiot. Version ${DOCKER_VERSION} found - upgrading..."
          wget -qO- https://get.docker.com/ | sh
        fi
      fi
  ;;
  
	darwin*)
      if ! type "docker-machine"  ; then
        echo "ERROR : Please install docker for MacOS X"
        exit 1
      fi
					
      docker-machine env $RHIOT_DOCKER_MACHINE_ENV 
      if [ $? -ne 0 ]; then
        echo "INFO : docker-machine start $RHIOT_DOCKER_MACHINE_ENV"
        docker-machine start $RHIOT_DOCKER_MACHINE_ENV 
      fi
      eval $(docker-machine env $RHIOT_DOCKER_MACHINE_ENV)
  ;;
esac

if [ $(docker ps | wc -l) -gt 1 ]; then
	docker stop $(docker ps -q)
fi

docker rm mongodb AMQP_SERVICE_HOST datastream-node spark_master spark_worker 

### MongoDB
echo "INFO : MongoDB" 
if [ $(docker ps -a | grep mongodb_data | wc -l) -eq 0 ]; then
    echo "MongoDB data volume doesn't exist. Creating..."
    docker run -v /data/db --name mongodb_data busybox true 
fi
docker run -d --volumes-from mongodb_data --name mongodb -p 27017:27017 mongo 
echo "INFO : MongoDB started" 

### IoT Connector

echo "INFO : ActiveMQ" 
docker pull rhiot/activemq:${RHIOT_VERSION} 
docker run -d --name AMQP_SERVICE_HOST \
  -e spring_activemq_broker_enabled=true -e spring_activemq_broker_amqpEnabled=true -e spring_activemq_broker_websocketEnabled=true \
  -p 5672:5672 -p 9090:9090 \
  -t rhiot/activemq:${RHIOT_VERSION} 
echo "INFO : ActiveMQ started"

### Data stream node

echo "INFO : Datastream" | tee -a $RHIOT_RCP_LOG
docker pull rhiot/datastream-node | sed -e 's/^/ECHO : /' 
docker run -d --name datastream-node \
  --link AMQP_SERVICE_HOST:AMQP_SERVICE_HOST -e AMQP_SERVICE_HOST=AMQP_SERVICE_HOST \
  --link mongodb:mongodb \
  -p 8080:8080 -p 5683:5683 -t rhiot/datastream-node 
echo "INFO : Datastream started" 

### Spark standalone cluster

echo "INFO : Spark" | tee -a $RHIOT_RCP_LOG
docker pull rhiot/spark-standalone:${RHIOT_VERSION}  
docker run -d --name spark_master -p 8081:8080 -P -t rhiot/spark-standalone:${RHIOT_VERSION} /start-master.sh "$@"  
sleep 5
SPARK_MASTER_SERVICE_HOST=`docker inspect spark_master | grep IPAddress\": | cut -d '"' -f 4 | uniq`
echo "INFO : Spark master started" 

docker run -d --name spark_worker \
  --link spark_master:spark_master --link AMQP_SERVICE_HOST:AMQP_SERVICE_HOST -e SPARK_MASTER_SERVICE_HOST=${SPARK_MASTER_SERVICE_HOST} \
  -v /tmp/jobs:/tmp/jobs -P \
  -t rhiot/spark-standalone:${RHIOT_VERSION} /start-worker.sh 
echo "INFO : Spark worker started"

